Templates
=========

Use this Window to manage your Templates.

Editing Templates
=================
In the left column you see a list of all templates.
To edit the content and encoding, just select the template in question.
Below the box are buttons to add, delete and reorder your templates.
You can Edit the template with the text box on the right side.
The encoding can be chosen from the drop down element on the bottom.

The changes are remembered immediately and you can freely switch between multiple templates when editing.
To use the changed template(s) you have to click "Save".
Simply closing the window with the [X] or "Close" button will discard all changes.

Use a Template
==============
Simply select a template and close the window.

Reordering
==========
The first template in the list is loaded by default.
You can reorder the templates to change that.

Defaults
========
To restore the default templates, simply delete all templates and click "Save"

Placeholders
============
You can put placeholders into the template.
Placeholders are numbers inside curly braces.
You don't need to use all numbers and can use numbers multiple times.
The numbers are as follows:

0: File name
1: Current part number
2: Total number of parts
3: Encoding
4: Length of encoded content
5: Hash List
6: Content

BINSEND Format
==============
The BINSEND format can be used to automatically decode chunks into complete files.
To use, put this content into the message: #BEGIN#{BINSEND:CHUNK}#END#

The #END# marker is optional if no content follows the binsend chunk.
Any number of whitespace is allowed between the chunk and the markers.

The format is a flat JSON with this structure:

{
"SameOrigin":bool,
"Name":string
"Part":Int32,
"List":[string,...],
"Encoding":Int32,
"Content":string
}

Explanation of fields:

SameOrigin:
This indicates if all parts must come from the same address as the first part.
You usually want this enabled unless you send parts from multiple clients with different addresses
or if you use the BM-MRND "From" address.

Name:
This is the file name

Part:
This is the number of the part (starting from 1)

List:
This is a list of sha1 hashes. It's only needed in the first part and ignored if present in others.

Encoding:
This is an integer specifying the encoding. Supported by default are:
Raw=0
Base64=1
Ascii85=2
Hex=3

Negative numbers are reserved for custom encodings

Content:
This is the content, encoded using the specified Encoding

Encoding
========
Different encodings fit different use cases. See below for an explanation

Raw
---
This will use the content "as-is".
Uses: Sending pre-encoded content or UTF-8 text.
Ratio: 1 input byte -> 1 output byte

Base64
------
Encodes your content as Base64.
This encoding is widely used in other applications/protocols and easily available on all platforms.
Uses: Sending binary content, data URL
Ratio: 3 input bytes -> 4 output bytes

Ascii85
-------
Similar to Base64 but with better ratio.
Uses: Keeping size small
Ratio: 4 input bytes -> 5 output bytes

Hex
---
Writes the bytes as a hexadecimal string.
Doubles the size of the data.
Uses: Allowing the user to copy/paste into a hex editor directly
Ratio: 1 input byte -> 2 output bytes
